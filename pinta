#!/usr/bin/python3

""" Generate and execute commands to reduce the raw uGMRT data into TIMER format.

    Developers: Abhimanyu Susobhanan, Yogesh Maan
"""

import sys
import os
import numpy as np
import datetime
import multiprocessing
import multiexit

multiexit.install()

"""
    Option to write the pipeline logs to a file. 
    The output will be written to $PWD/pinta.log . 
"""
if '--log-to-file' in sys.argv:
    now = datetime.datetime.now().strftime('%Y%m%dT%H%M%S')
    logfile = 'pinta.{}.log'.format(now)
    print('Output will be written to', logfile)
    sys.stdout = open(logfile, 'w') 

import pintautils as utils
import pintaexec as pexec
from pintasession import session
from pintagptin import create_gptin_file_from_session

for idx, item in enumerate(session.pipeline_items):

    pexec.setup_input_ln(session, item)
    
    def run_branch1():
        if session.run_gptool:
            if not session.auto_gptin:
                utils.copy_gptool_in(session.gptool_in_dir, session.working_dir, item.intfreq)
            else:
                create_gptin_file_from_session(session, item)
            pexec.gptool_branch(session, item)
        else:
            pexec.norfix_branch(session, item)
    def run_branch2():
        if session.run_rficlean:
            #rfic_hdrfilename = "{}/{}-{}-ttemp-gm.info".format(session.working_dir, item.jname, item.idx)
            utils.make_rficlean_hdrfile(item.rfic_hdrfilename, item.jname, item.freq, item.nchan, item.chanwidth, item.tsmpl, item.sideband)
            pexec.rficlean_branch(session, item)

    proc1 = multiprocessing.Process(target=run_branch1)
    proc2 = multiprocessing.Process(target=run_branch2)
    
    proc1.start()
    proc2.start()
    
    @multiexit.register
    def clean_child_processes():
        """ Terminate the child processes if pinta is terminated prematurely. """
        
        print("Terminating child process #", proc1.pid())
        proc1.terminate()
        proc1.join()
        
        print("Terminating child process #", proc2.pid())
        proc2.terminate()
        proc2.join()
    
    proc1.join()
    proc2.join()
    
    multiexit.unregister(clean_child_processes)

    print("[CMD] Creating summary file pinta_summary.txt")
    if not session.test_mode:
        os.system("fmt_pdmp_out.sh")

    if session.retain_aux:
        utils.move_aux_files(session, item)
    else:
        utils.remove_aux_files(session, item)
        
    pexec.remove_input_ln(session, item)

